{"version":3,"sources":["components/HeaderNav.js","components/AddTODO.js","components/ToDoItem.js","ListContext.js","components/ToDoMap.js","screens/Home.js","components/ToDoMapHistory.js","screens/History.js","screens/Chart.js","components/Main.js","App.js","index.js"],"names":["useStyles","makeStyles","buttonEnd","marginRight","button","buttonText","fontWeight","color","fontSize","titleText","toolMargin","marginBottom","Header","classes","AppBar","Toolbar","Box","display","flexGrow","Typography","variant","className","Button","disableRipple","to","style","textDecoration","useStyle","textField","margin","marginLeft","labelStyle","AddTODO","props","TextField","value","textEvent","onChange","label","labelText","InputProps","endAdornment","InputAdornment","position","IconButton","size","onClick","handleAdd","backgroundColor","InputLabelProps","card","padding","flexDirection","toDoText","alignSelf","flex","checkIcon","ToDoItem","Card","noWrap","todo","complete","check","delete","ListContext","React","createContext","ListProvider","Provider","list","ToDoMapHome","useContext","active","setActive","childUpdate","setChildUpdate","items","map","item","index","deletedJson","JSON","parse","localStorage","getItem","deletedItem","splice","push","setItem","stringify","deleteHome","completeJson","completeItem","addHome","back","minHeight","minWidth","paddingBottom","outerDiv","justifyContent","mainDiv","borderRadius","marginTop","countText","Home","Container","data","activeLength","ToDoMapHistory","deletedItems","completedItems","type","current","finalDeleteTask","mainText","History","useEffect","getDeletedTasks","addedJson","getAddedTasks","secDiv","alignItems","Chart","chartActive","chart","am4core","am4charts","fontFamily","console","log","title","titles","create","text","align","series","dataFields","category","TaskType","count","length","legend","dispose","id","Main","useState","setTextEvent","setLabelText","useRef","activeList","renderActiveList","json","renderDeletedList","renderCompletedList","path","exact","replace","task","e","target","theme","createTheme","palette","primary","main","secondary","typography","h5","App","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7883f2ec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { Button, makeStyles, Typography, Box } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Styling for header \r\nconst useStyles = makeStyles({\r\n  buttonEnd: {\r\n    marginRight: \"5%\",\r\n  },\r\n  button: {\r\n    marginRight: \"7%\",\r\n  },\r\n  buttonText: {\r\n    fontWeight: 800,\r\n    color: \"#2B3856\",\r\n    fontSize: '1.2rem'\r\n  },\r\n  titleText: {\r\n    fontWeight: 800,\r\n    color: \"#2B3856\",\r\n    fontSize: '2rem'\r\n  },\r\n  toolMargin: {\r\n      marginBottom: \"2%\"\r\n  }\r\n});\r\n\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  // Returning header\r\n  return (\r\n    <div>\r\n      <AppBar color=\"secondary\">\r\n        <Toolbar>\r\n          <Box display=\"flex\" flexGrow={1}>\r\n            <Typography variant=\"h5\" className={classes.titleText} color=\"primary\">\r\n              Curetrax TODO\r\n            </Typography>\r\n          </Box>\r\n          <Button className={classes.button} disableRipple>\r\n            <Link\r\n              to=\"/cureTask\"\r\n              className={classes.buttonText}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              ToDo\r\n            </Link>\r\n          </Button>\r\n          <Button className={classes.button} disableRipple>\r\n            <Link\r\n              to=\"/history\"\r\n              className={classes.buttonText}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              History\r\n            </Link>\r\n          </Button>\r\n          <Button className={classes.buttonEnd} disableRipple>\r\n          <Link\r\n              to=\"/chart\"\r\n              className={classes.buttonText}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              Chart\r\n            </Link>\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar className={classes.toolMargin}/>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { InputAdornment, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Add from \"@material-ui/icons/AddBoxOutlined\";\r\n\r\n// Styling for input field and label text\r\nconst useStyle = makeStyles({\r\n  textField: {\r\n    margin: \"2rem\",\r\n    marginLeft: \"calc(3.5rem + 2vw)\",\r\n    marginRight: \"calc(3.5rem + 2vw)\",\r\n  },\r\n\r\n  labelStyle: {\r\n    fontSize: \"1.1vw\",\r\n    fontWeight: 600,\r\n  },\r\n});\r\n\r\n// Returns input field components with button\r\nexport default function AddTODO(props) {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <TextField\r\n      value={props.textEvent}\r\n      onChange={props.onChange}\r\n      label={props.labelText}\r\n      variant=\"outlined\"\r\n      className={classes.textField}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <IconButton\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={props.handleAdd}\r\n              style={{ backgroundColor: \"rgba(43, 56, 86, 0.1)\" }}\r\n            >\r\n              <Add />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n        className: classes.labelStyle,\r\n      }}\r\n      InputLabelProps={{\r\n        className: classes.labelStyle,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Delete from \"@material-ui/icons/DeleteOutline\";\r\n\r\n// Styling for todo item\r\nconst useStyle = makeStyles({\r\n  card: {\r\n    backgroundColor: \"#2B3856\",\r\n    padding: \"1rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    marginBottom: \"1rem\",\r\n  },\r\n\r\n  toDoText: {\r\n    color: \"white\",\r\n    alignSelf: \"center\",\r\n    flex: \"3\",\r\n    fontWeight: \"500\",\r\n  },\r\n\r\n  checkIcon: {\r\n    marginLeft: \"auto\",\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nexport default function ToDoItem(props) {\r\n  const classes = useStyle();\r\n\r\n  // Return todo task card\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Typography className={classes.toDoText} noWrap>\r\n        {props.todo}\r\n      </Typography>\r\n      <IconButton className={classes.checkIcon} onClick={props.complete}>{props.check}</IconButton>\r\n      <IconButton\r\n        className={classes.checkIcon}\r\n        onClick={props.delete}\r\n      >\r\n        <Delete />\r\n      </IconButton>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst ListContext = React.createContext({});\r\n\r\nexport const ListProvider = ListContext.Provider;\r\n\r\nexport default ListContext;\r\n","import React, { useContext } from \"react\";\r\nimport ToDoItem from \"./ToDoItem\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ListContext from \"../ListContext\";\r\nimport Check from \"@material-ui/icons/CheckBoxOutlined\"\r\n\r\n// Styling for list of tasks on home page\r\nconst useStyle = makeStyles({\r\n  list: {\r\n    marginLeft: \"1rem\",\r\n    marginRight: \"3.5rem\",\r\n  },\r\n});\r\n\r\nexport default function ToDoMapHome(props) {\r\n  const classes = useStyle();\r\n\r\n  // Retrieving context from parent component (Main.js)\r\n  const { active, setActive, childUpdate, setChildUpdate } =\r\n    useContext(ListContext);\r\n\r\n  // Adding task to completed list of tasks in local storage\r\n  // Setting state of active to re-render home page without task\r\n  function addHome(index) {\r\n    let completeJson = JSON.parse(localStorage.getItem(\"completedTasks\"));\r\n    if (completeJson === null) {\r\n      completeJson = [];\r\n    }\r\n\r\n    const completeItem = active.splice(index, 1);\r\n    completeJson.push(completeItem);\r\n    localStorage.setItem(\"completedTasks\", JSON.stringify(completeJson));\r\n\r\n    setActive(active);\r\n    localStorage.setItem(\"tasks\", JSON.stringify(active));\r\n    setChildUpdate(!childUpdate);\r\n  }\r\n\r\n  // Adding task to deleted task list and updating state of active for re-render\r\n  function deleteHome(index) {\r\n    let deletedJson = JSON.parse(localStorage.getItem(\"deletedTasks\"));\r\n    if (deletedJson === null) {\r\n      deletedJson = [];\r\n    }\r\n\r\n    const deletedItem = active.splice(index, 1);\r\n    deletedJson.push(deletedItem);\r\n    localStorage.setItem(\"deletedTasks\", JSON.stringify(deletedJson));\r\n\r\n    setActive(active);\r\n    localStorage.setItem(\"tasks\", JSON.stringify(active));\r\n    setChildUpdate(!childUpdate);\r\n  }\r\n\r\n  // Returning list of active tasks\r\n  return (\r\n    <ul className={classes.list}>\r\n      {props.items.map((item, index) => (\r\n        <ToDoItem\r\n          key={index}\r\n          todo={item.todo}\r\n          check={<Check/>}\r\n          delete={() => {\r\n            deleteHome(index);\r\n          }}\r\n          complete={() => {\r\n            addHome(index);\r\n          }}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport Header from \"../components/HeaderNav\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport AddTODO from \"../components/AddTODO\";\r\nimport ToDoMapHome from \"../components/ToDoMap\";\r\n\r\n\r\n// Styling for MaterialUI components\r\nconst useStyles = makeStyles({\r\n  back: {\r\n    minHeight: \"100vh\",\r\n    minWidth: \"100vw\",\r\n    backgroundColor: \"#2B3856\",\r\n    paddingBottom: \"2rem\",\r\n  },\r\n\r\n  outerDiv: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  mainDiv: {\r\n    backgroundColor: \"#D6D6D7\",\r\n    borderRadius: \"8px\",\r\n    marginTop: \"4vh\",\r\n    marginBottom: \"2vh\",\r\n    minWidth: \"50vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  countText: {\r\n    fontWeight: 600,\r\n    fontSize: \"1.2vw\",\r\n    color: \"white\",\r\n    marginLeft: \"57vw\",\r\n  },\r\n\r\n});\r\n\r\n// Returns 'TODO' page\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.back}>\r\n      <Header />\r\n\r\n      <div className={classes.outerDiv}>\r\n        <div className={classes.mainDiv}>\r\n          <AddTODO\r\n            handleAdd={props.handleAdd}\r\n            textEvent={props.textEvent}\r\n            onChange={props.onChange}\r\n            labelText={props.labelText}\r\n          />\r\n          <ToDoMapHome items={props.data}/>\r\n        </div>\r\n      </div>\r\n      <Typography className={classes.countText}>\r\n        How many things to do: {props.activeLength}\r\n      </Typography>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport ToDoItem from \"./ToDoItem\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ListContext from \"../ListContext\";\r\n\r\n// Styling for each task list\r\nconst useStyle = makeStyles({\r\n  list: {\r\n    marginLeft: \"1rem\",\r\n    marginRight: \"3.5rem\",\r\n  },\r\n});\r\n\r\nexport default function ToDoMapHistory(props) {\r\n  const classes = useStyle();\r\n\r\n  // Retrieving context for deleted and completed tasks\r\n  // Also getting childUpdate for re-retrieval of lists in Main.js\r\n  const { deletedItems, setChildUpdate, childUpdate, completedItems } =\r\n    useContext(ListContext);\r\n\r\n  // Permanently deleting item from corresponding list\r\n  function finalDeleteTask(index, type) {\r\n    // type passed in History.js call of ToDoMapHome\r\n    // Deletes item from deletedTasks in localStorage permanently\r\n    if (type === \"deleted\") {\r\n      deletedItems.current.splice(index, 1);\r\n      localStorage.setItem(\r\n        \"deletedTasks\",\r\n        JSON.stringify(deletedItems.current)\r\n      );\r\n      setChildUpdate(!childUpdate);\r\n\r\n      // type passed in History.js call of ToDoMapHome\r\n      // Deletes item from completedTasks in localStorage permanently\r\n    } else if (type === \"completed\") {\r\n      completedItems.current.splice(index, 1);\r\n      localStorage.setItem(\r\n        \"completedTasks\",\r\n        JSON.stringify(completedItems.current)\r\n      );\r\n      setChildUpdate(!childUpdate);\r\n    }\r\n  }\r\n\r\n  // Renders list for history page\r\n  return (\r\n    <ul className={classes.list}>\r\n      {props.items.map((item, index) => (\r\n        <ToDoItem\r\n          key={index}\r\n          type={props.type}\r\n          todo={item[0].todo}\r\n          delete={() => {\r\n            finalDeleteTask(index, props.type);\r\n          }}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport { ToDoMapHistory };\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Header from \"../components/HeaderNav\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ListContext from \"../ListContext\";\r\nimport ToDoMapHistory from \"../components/ToDoMapHistory\";\r\n\r\n// Styling for history page and task lists\r\nconst useStyles = makeStyles({\r\n  back: {\r\n    minHeight: \"100vh\",\r\n    minWidth: \"100vw\",\r\n    backgroundColor: \"#2B3856\",\r\n    paddingBottom: \"2rem\",\r\n  },\r\n\r\n  outerDiv: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  mainDiv: {\r\n    backgroundColor: \"#D6D6D7\",\r\n    borderRadius: \"8px\",\r\n    marginTop: \"4vh\",\r\n    margin: \"2vw\",\r\n    minHeight: \"28vh\",\r\n    marginBottom: \"2vh\",\r\n    minWidth: \"40vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  mainText: {\r\n    fontWeight: 700,\r\n    fontSize: \"1.25vw\",\r\n    color: \"#2B3856\",\r\n    margin: \"1rem\",\r\n  },\r\n});\r\n\r\n\r\nexport default function History() {\r\n  const classes = useStyles();\r\n\r\n  // Retrieving context for deleted and completed items\r\n  const { deletedItems, completedItems } = useContext(ListContext);\r\n\r\n  // Retrieves updated deleted and completed task list on every render\r\n  useEffect(() => {\r\n    deletedItems.current = getDeletedTasks();\r\n    completedItems.current = getAddedTasks();\r\n  });\r\n\r\n  // Retrieving deleted task list from local storage\r\n  function getDeletedTasks() {\r\n    let deletedJson = JSON.parse(localStorage.getItem(\"deletedTasks\"));\r\n    if (deletedJson === null) {\r\n      deletedJson = [];\r\n    }\r\n    return deletedJson;\r\n  }\r\n\r\n  // Retrieving completed task list from local storage\r\n  function getAddedTasks() {\r\n    let addedJson = JSON.parse(localStorage.getItem(\"completedTasks\"));\r\n    if (addedJson === null) {\r\n      addedJson = [];\r\n    }\r\n    return addedJson;\r\n  }\r\n\r\n\r\n  // Returning completed and deleted task lists\r\n  // Also assigning type for each list for use in ToDoMapHistory component\r\n  return (\r\n    <Container className={classes.back}>\r\n      <Header />\r\n      <div className={classes.outerDiv}>\r\n        <div className={classes.mainDiv}>\r\n          <Typography className={classes.mainText}>Completed Tasks</Typography>\r\n          <ToDoMapHistory items={completedItems.current} type=\"completed\"/>\r\n        </div>\r\n        <div className={classes.mainDiv}>\r\n          <Typography className={classes.mainText}>Deleted Tasks</Typography>\r\n          <ToDoMapHistory items={deletedItems.current} type=\"deleted\"/>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Header from \"../components/HeaderNav\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport ListContext from \"../ListContext\";\r\n\r\nconst useStyles = makeStyles({\r\n  back: {\r\n    minHeight: \"100vh\",\r\n    minWidth: \"100vw\",\r\n    backgroundColor: \"#2B3856\",\r\n    paddingBottom: \"2rem\",\r\n  },\r\n\r\n  outerDiv: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  mainDiv: {\r\n    backgroundColor: \"#D6D6D7\",\r\n    borderRadius: \"8px\",\r\n    marginTop: \"4vh\",\r\n    padding: \"1rem\",\r\n    minHeight: \"70vh\",\r\n    minWidth: \"70vw\",\r\n  },\r\n\r\n  secDiv: {\r\n    borderRadius: \"8px\",\r\n    marginTop: \"4vh\",\r\n    minHeight: \"70vh\",\r\n    marginBottom: \"2vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  mainText: {\r\n    fontWeight: 700,\r\n    fontSize: \"2vw\",\r\n    color: \"white\",\r\n    margin: \"1rem\",\r\n  },\r\n});\r\n\r\nexport default function Chart() {\r\n  const classes = useStyles();\r\n  const { deletedItems, completedItems } = useContext(ListContext);\r\n  let chartActive = null;\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n    chart.fontFamily = \"Montserrat\";\r\n    chart.minWidth = \"50px\"\r\n\r\n    console.log('running')\r\n\r\n    let title = chart.titles.create();\r\n    title.text = \"Completed Tasks vs. Deleted Tasks\";\r\n    title.fontWeight = 500;\r\n    title.fontSize = \"4vh\";\r\n    title.align = \"center\";\r\n    title.marginTop = '10rem';\r\n    \r\n    let series = chart.series.push(new am4charts.PieSeries());\r\n    series.dataFields.value = \"count\";\r\n    series.dataFields.category = \"TaskType\";\r\n\r\n    chart.data = [\r\n      {\r\n        TaskType: \"Completed Items\",\r\n        count: completedItems.current.length,\r\n      },\r\n      {\r\n        TaskType: \"Deleted Items\",\r\n        count: deletedItems.current.length,\r\n      },\r\n    ];\r\n\r\n    chart.legend = new am4charts.Legend();\r\n\r\n    return () => {\r\n      chart.dispose();\r\n    };\r\n  },);\r\n\r\n  if (completedItems.current.length + deletedItems.current.length === 0) {\r\n    chartActive = (\r\n      <div className={classes.secDiv}>\r\n        <Typography className={classes.mainText}>\r\n          Add or delete items in the History Tab to see your chart!\r\n        </Typography>\r\n      </div>\r\n    );\r\n  } else {\r\n    chartActive = <div className={classes.mainDiv} id=\"chartdiv\"></div>;\r\n  }\r\n\r\n  return (\r\n    <Container className={classes.back}>\r\n      <Header />\r\n      <div className={classes.outerDiv}>{chartActive}</div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Home from \"../screens/Home\";\r\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\r\nimport History from \"../screens/History\";\r\nimport { ListProvider } from \"../ListContext\";\r\nimport Chart from \"../screens/Chart\";\r\n\r\nexport default function Main() {\r\n  // useState for user input and input label\r\n  const [textEvent, setTextEvent] = useState(\"\");\r\n  const [labelText, setLabelText] = useState(\"\");\r\n\r\n  // useState for task lists and notifying of child component updates\r\n  const [active, setActive] = useState([]);\r\n  const [childUpdate, setChildUpdate] = useState(false);\r\n  const deletedItems = useRef([]);\r\n  const completedItems = useRef([]);\r\n\r\n  // Passed as context\r\n  const activeList = {\r\n    active,\r\n    setActive,\r\n    childUpdate,\r\n    setChildUpdate,\r\n    deletedItems,\r\n    completedItems,\r\n  };\r\n\r\n  // Runs on initial render of home page to retrieve each task list and also\r\n  // runs when child components update\r\n  useEffect(() => {\r\n    renderActiveList();\r\n    deletedItems.current = renderDeletedList();\r\n    completedItems.current = renderCompletedList();\r\n\r\n    if (active.length === 0) {\r\n      setLabelText(\"Add your first task!\");\r\n    } else {\r\n      setLabelText(\"Add another task!\");\r\n    }\r\n  }, [childUpdate, active.length]);\r\n\r\n\r\n  // Renders tasks for home page\r\n  function renderActiveList() {\r\n    let json = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    if (json === null) {\r\n      json = [];\r\n    }\r\n    setActive(json);\r\n  }\r\n\r\n\r\n  // Renders tasks for completed list on history page\r\n  function renderCompletedList() {\r\n    let addedJson = JSON.parse(localStorage.getItem(\"completedTasks\"));\r\n    if (addedJson === null) {\r\n      addedJson = [];\r\n    }\r\n    return addedJson;\r\n  }\r\n\r\n\r\n  // Render tasks for deleted list on history page\r\n  function renderDeletedList() {\r\n    let deletedJson = JSON.parse(localStorage.getItem(\"deletedTasks\"));\r\n    if (deletedJson === null) {\r\n      deletedJson = [];\r\n    }\r\n    return deletedJson;\r\n  }\r\n\r\n\r\n  // Adds event to active tasks list and re-renders tasks for display\r\n  function handleAdd(textEvent) {\r\n    // Checking for empty input or just spaces\r\n    if (!textEvent.replace(/\\s/g, \"\").length) {\r\n      setLabelText(\"Please enter a valid task*\");\r\n      setTextEvent(\"\");\r\n\r\n      // Handles adding of tasks to local storage and re-rendering of display\r\n      // Retrieves local storage, appends new task, sets local storage, updates state\r\n    } else if (textEvent) {\r\n      let json = JSON.parse(localStorage.getItem(\"tasks\"));\r\n      if (json === null) {\r\n        json = [];\r\n      }\r\n      let task = {\r\n        todo: textEvent,\r\n      };\r\n      json.push(task);\r\n      localStorage.setItem(\"tasks\", JSON.stringify(json));\r\n      renderActiveList();\r\n\r\n      setTextEvent(\"\");\r\n      setLabelText(\"Add another task!\");\r\n    }\r\n  }\r\n\r\n  // Context passed for child components\r\n  return (\r\n    <Switch>\r\n      <ListProvider value={activeList}>\r\n        <Route path=\"/cureTask\" exact>\r\n          <Home\r\n            handleAdd={() => {\r\n              handleAdd(textEvent);\r\n            }}\r\n            textEvent={textEvent}\r\n            onChange={(e) => {\r\n              setTextEvent(e.target.value);\r\n            }}\r\n            labelText={labelText}\r\n            data={active}\r\n            activeLength={active.length}\r\n          />\r\n        </Route>\r\n        <Route path=\"/history\">\r\n          <History />\r\n        </Route>\r\n        <Route path=\"/chart\">\r\n          <Chart />\r\n        </Route>\r\n      </ListProvider>\r\n    </Switch>\r\n  );\r\n}\r\n","import { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Main from \"./components/Main\";\n\n// Creating theme for MaterialUI components and adjusting default settings\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#2B3856\",\n    },\n    secondary: {\n      main: \"#D6D6D7\",\n    },\n  },\n  typography: {\n    fontFamily: \"Montserrat\",\n    h5: {\n      fontWeight: 700,\n    },\n  },\n});\n\n// Providing Theme and Router to app tree\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Main />\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\n// Initial entry point of app\n// Wrapping in HashRouter for github pages functionality \nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}